-- 오라클4일차 JOIN
-- JOIN
-- 두 개 이상의 테이블에서 연관성을 가지고 있는 데이터들을
-- 따로 분류하여 새로운 가상의 테이블을 만듬
-- -> 여러 테이블의 레코드를 조합하여 하나의 레코드로 만듬
-- ANSI 표준 구문
SELECT EMP_NAME, DEPT_TITLE
FROM EMPLOYEE
JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID;
-- 오라클 전용 구문
SELECT EMP_NAME, DEPT_TITLE
FROM EMPLOYEE, DEPARTMENT WHERE DEPT_CODE = DEPT_ID;

-- @실습문제1
-- 부서명과 지역명을 출력하세요.(DEPARTMENT, LOCATION 테이블 이용)
SELECT DEPT_TITLE, LOCAL_NAME
FROM DEPARTMENT
JOIN LOCATION ON LOCATION_ID = LOCAL_CODE;
DESC DEPARTMENT;

--11. 사원명과, 부서명을 출력하세요.
--   부서코드가 D5이면 총무부, D6이면 기획부, D9이면 영업부로 처리하시오.(case 사용)
--   단, 부서코드가 D5, D6, D9 인 직원의 정보만 조회하고, 부서코드 기준으로 오름차순 정렬함.
SELECT EMP_NAME, DEPT_TITLE
FROM EMPLOYEE
JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID;

-- @실습문제2
-- 사원명과 직급명을 출력하세요!
SELECT EMP_NAME, JOB_NAME
FROM EMPLOYEE E
-- 컬럼명이 같을 때 별칭으로 테이블명 붙이기
--JOIN JOB J ON E.JOB_CODE = J.JOB_CODE; 
-- 컬럼명이 같을때 USING 키워드 사용 가능
JOIN JOB J USING(JOB_CODE); 

-- @실습문제3
-- 지역명과 국가명을 출력하세요~~
SELECT LOCAL_NAME, NATIONAL_NAME
FROM LOCATION L
--JOIN NATIONAL N ON L.NATIONAL_CODE = N.NATIONAL_CODE;
JOIN NATIONAL N USING(NATIONAL_CODE);

-- KH계정 테이블안에서 JOIN한 테이블
-- 1. EMPLOYEE AND DEPARTMENT(부서명)
-- 2. EMPLOYEE AND JOB(직급명)
-- 3. DEPARTMENT AND LOCATION(지역명)
-- 4. LOCATION AND NATIONAL(국가명)

-- ========== JOIN의 종류 ===================
-- 1. INNER JOIN : 교집합, 일반적으로 사용하는 조인
-- 2. OUTER JOIN : 합집합, 모두 출력하는 조인
-- 1. 사원명과 부서명을 출력하시오.
SELECT EMP_NAME, DEPT_TITLE
FROM EMPLOYEE
JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID;
-- 이렇게 교집합으로 출력됨.
-- 합집합으로 출력되도록 OUTER 조인 사용
SELECT EMP_NAME, DEPT_TITLE
FROM EMPLOYEE
LEFT OUTER JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID;
-- LEFT OUTER JOIN은 왼쪽 테이블이 가지고 있는 모든 데이터를 출력(하동운,이오리)
SELECT EMP_NAME, DEPT_TITLE
FROM EMPLOYEE
RIGHT OUTER JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID;
-- RIGHT OUTER JOIN은 오른쪽 테이블이 가지고 있는 모든 데이터를 출력(마케팅, 국내영업, 해외영업3부)
SELECT EMP_NAME, DEPT_TITLE
FROM EMPLOYEE
FULL OUTER JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID;
-- FULL OUTER JOIN은 모든 테이블이 가지고 있는 모든 데이터를 출력하는 조인
-- 오라클 전용 구문, JOIN 사용해보기
-- 1. INNER JOIN
SELECT EMP_NAME, DEPT_TITLE
FROM EMPLOYEE, DEPARTMENT WHERE DEPT_CODE = DEPT_ID;
-- 2. LEFT OUTER JOIN
SELECT EMP_NAME, DEPT_TITLE
FROM EMPLOYEE, DEPARTMENT WHERE DEPT_CODE = DEPT_ID(+);
-- 3. RIGHT OUTER JOIN
SELECT EMP_NAME, DEPT_TITLE
FROM EMPLOYEE, DEPARTMENT WHERE DEPT_CODE(+) = DEPT_ID;
-- 4. FULL OUTER JOIN
-- 존재하지 않음

-- @JOIN 종합실습
--1. 주민번호가 1970년대 생이면서 성별이 여자이고, 
-- 성이 전씨인 직원들의 사원명, 주민번호, 부서명, 직급명을 조회하시오.
SELECT EMP_NAME, EMP_NO, DEPT_TITLE, JOB_NAME
FROM EMPLOYEE
JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID
JOIN JOB USING(JOB_CODE)
WHERE (SUBSTR(EMP_NO,1,2) BETWEEN 70 AND 79) AND SUBSTR(EMP_NO,8,1) IN ('2', '4')
AND EMP_NAME LIKE '전%';
--2. 이름에 '형'자가 들어가는 직원들의 사번, 사원명, 부서명을 조회하시오.
SELECT EMP_ID, EMP_NAME, DEPT_TITLE
FROM EMPLOYEE
LEFT OUTER JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID
WHERE EMP_NAME LIKE '%형%';
--3. 해외영업부에 근무하는 사원명, 직급명, 부서코드, 부서명을 조회하시오.
SELECT EMP_NAME, JOB_NAME, DEPT_CODE, DEPT_TITLE
FROM EMPLOYEE
JOIN JOB USING(JOB_CODE)
JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID
WHERE DEPT_TITLE LIKE '해외영업_부';
--4. 보너스포인트를 받는 직원들의 사원명, 보너스포인트, 부서명, 근무지역명을 조회하시오.
SELECT EMP_NAME "사원명", BONUS "보너스포인트"
, DEPT_TITLE "부서명", LOCAL_NAME "근무지역명"
FROM EMPLOYEE
LEFT OUTER JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID
LEFT OUTER JOIN LOCATION ON LOCATION_ID = LOCAL_CODE
WHERE BONUS IS NOT NULL;
--5. 부서코드가 D2인 직원들의 사원명, 직급명, 부서명, 근무지역명을 조회하시오.
SELECT EMP_NAME, JOB_NAME, DEPT_TITLE, LOCAL_NAME
FROM EMPLOYEE
JOIN JOB USING(JOB_CODE)
JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID
JOIN LOCATION ON LOCATION_ID = LOCAL_CODE
WHERE DEPT_CODE = 'D2';
--6. 급여등급테이블의 최대급여(MAX_SAL)보다 많이 받는 직원들의 사원명, 직급명, 급여, 연봉을 조회하시오.
-- (사원테이블과 급여등급테이블을 SAL_LEVEL컬럼기준으로 조인할 것)
-- 데이터 없음!
SELECT EMP_NAME, JOB_NAME, SALARY, SALARY*12
FROM EMPLOYEE
JOIN JOB USING(JOB_CODE)
JOIN SAL_GRADE USING(SAL_LEVEL)
WHERE SALARY > MAX_SAL;
--7. 한국(KO)과 일본(JP)에 근무하는 직원들의 사원명, 부서명, 지역명, 국가명을 조회하시오.
SELECT EMP_NAME, DEPT_TITLE, LOCAL_NAME, NATIONAL_NAME
FROM EMPLOYEE
JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID
JOIN LOCATION ON LOCATION_ID = LOCAL_CODE
JOIN NATIONAL USING(NATIONAL_CODE)
WHERE NATIONAL_CODE IN ('KO', 'JP');
--8. 보너스포인트가 없는 직원들 중에서 직급이 차장과 사원인 직원들의 사원명, 직급명, 급여를 조회하시오. 
--단, join과 IN 사용할 것
SELECT EMP_NAME, JOB_NAME, SALARY
FROM EMPLOYEE
JOIN JOB USING(JOB_CODE)
WHERE BONUS IS NULL AND JOB_CODE IN ('J4','J7');
SELECT * FROM JOB;
--9. 재직중인 직원과 퇴사한 직원의 수를 조회하시오.
SELECT DECODE(ENT_YN, 'N', '재직', '퇴직') "재직여부", COUNT(*) "수"
FROM EMPLOYEE
GROUP BY ENT_YN;





